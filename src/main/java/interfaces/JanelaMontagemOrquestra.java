package interfaces;

import controle.ControladorCadastroApresentaçõesMusicais;
import javax.swing.JOptionPane;
import persistência.BD;
import controle.ControladorCadastroMaestros;
import controle.ControladorCadastroPeçasMusicais;
import controle.ControladorCadastroRepertórios;

public class JanelaMontagemOrquestra extends javax.swing.JFrame {

    public JanelaMontagemOrquestra() {
        BD.criaConexão();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        montagem_orquestraMenuBar = new javax.swing.JMenuBar();
        maestroMenu = new javax.swing.JMenu();
        cadastrar_maestroMenuItem = new javax.swing.JMenuItem();
        peça_musicalMenu = new javax.swing.JMenu();
        cadastrar_peça_musicalMenuItem = new javax.swing.JMenuItem();
        repertorioMenu = new javax.swing.JMenu();
        cadastrar_repertorioMenuItem = new javax.swing.JMenuItem();
        apresentação_musicalMenu = new javax.swing.JMenu();
        cadastrar_apresentaçãoMenuItem = new javax.swing.JMenuItem();
        pesquisar_apresentacãoMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Montagem de repertório de uma orquestra");
        setPreferredSize(new java.awt.Dimension(500, 300));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                terminarSistema(evt);
            }
        });

        maestroMenu.setText("Maestro");

        cadastrar_maestroMenuItem.setText("Cadastrar");
        cadastrar_maestroMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarMaestro(evt);
            }
        });
        maestroMenu.add(cadastrar_maestroMenuItem);

        montagem_orquestraMenuBar.add(maestroMenu);

        peça_musicalMenu.setText("Peças musicais");

        cadastrar_peça_musicalMenuItem.setText("Cadastrar");
        cadastrar_peça_musicalMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarPeçaMusical(evt);
            }
        });
        peça_musicalMenu.add(cadastrar_peça_musicalMenuItem);

        montagem_orquestraMenuBar.add(peça_musicalMenu);

        repertorioMenu.setText("Repertório");

        cadastrar_repertorioMenuItem.setText("Cadastrar");
        cadastrar_repertorioMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarRepertório(evt);
            }
        });
        repertorioMenu.add(cadastrar_repertorioMenuItem);

        montagem_orquestraMenuBar.add(repertorioMenu);

        apresentação_musicalMenu.setText("Apresentação Musical");
        apresentação_musicalMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarApresentaçãoMusical(evt);
            }
        });

        cadastrar_apresentaçãoMenuItem.setText("Cadastrar");
        cadastrar_apresentaçãoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrar_apresentaçãoMenuItemActionPerformed(evt);
            }
        });
        apresentação_musicalMenu.add(cadastrar_apresentaçãoMenuItem);

        pesquisar_apresentacãoMenuItem.setText("Pesquisar");
        pesquisar_apresentacãoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisarApresentações(evt);
            }
        });
        apresentação_musicalMenu.add(pesquisar_apresentacãoMenuItem);

        montagem_orquestraMenuBar.add(apresentação_musicalMenu);

        setJMenuBar(montagem_orquestraMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 277, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cadastrarMaestro(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarMaestro
        // TODO add your handling code here:
        new ControladorCadastroMaestros();
    }//GEN-LAST:event_cadastrarMaestro

    private void terminarSistema(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_terminarSistema
        // TODO add your handling code here:
        BD.fechaConexão();
        System.exit(0);
    }//GEN-LAST:event_terminarSistema

    private void cadastrar_apresentaçãoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrar_apresentaçãoMenuItemActionPerformed
        new ControladorCadastroApresentaçõesMusicais();
    }//GEN-LAST:event_cadastrar_apresentaçãoMenuItemActionPerformed

    private void informarServiçoIndisponível() {
        //THIS -> janela mae
        //string da msg, titulo, e e tipo de msg
        JOptionPane.showMessageDialog(this, "Serviço Indisponível", "Informação",
                JOptionPane.INFORMATION_MESSAGE);
    }
    private void pesquisarApresentações(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisarApresentações
        new JanelaPesquisaApresentaçõesMusicais().setVisible(true);
    }//GEN-LAST:event_pesquisarApresentações

    private void cadastrarPeçaMusical(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarPeçaMusical
        new ControladorCadastroPeçasMusicais();
    }//GEN-LAST:event_cadastrarPeçaMusical

    private void cadastrarRepertório(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarRepertório
        new ControladorCadastroRepertórios();
    }//GEN-LAST:event_cadastrarRepertório

    private void cadastrarApresentaçãoMusical(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarApresentaçãoMusical
        new ControladorCadastroApresentaçõesMusicais();
    }//GEN-LAST:event_cadastrarApresentaçãoMusical

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaMontagemOrquestra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaMontagemOrquestra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaMontagemOrquestra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaMontagemOrquestra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JanelaMontagemOrquestra().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu apresentação_musicalMenu;
    private javax.swing.JMenuItem cadastrar_apresentaçãoMenuItem;
    private javax.swing.JMenuItem cadastrar_maestroMenuItem;
    private javax.swing.JMenuItem cadastrar_peça_musicalMenuItem;
    private javax.swing.JMenuItem cadastrar_repertorioMenuItem;
    private javax.swing.JMenu maestroMenu;
    private javax.swing.JMenuBar montagem_orquestraMenuBar;
    private javax.swing.JMenuItem pesquisar_apresentacãoMenuItem;
    private javax.swing.JMenu peça_musicalMenu;
    private javax.swing.JMenu repertorioMenu;
    // End of variables declaration//GEN-END:variables
}
